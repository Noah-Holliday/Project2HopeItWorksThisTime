{"version":3,"sources":["reportWebVitals.js","Floor.js","Arrow.js","Grass.js","GrassLarge.js","Bedroll.js","ToolHoe.js","ToolPickaxe.js","ToolAxe.js","Campfire.js","TentClosed.js","StructureRoof.js","Item.js","Scene.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Floor","position","rotation","Math","PI","attach","args","color","Arrow","props","group","useRef","useGLTF","nodes","materials","ref","dispose","onClick","e","console","log","arrowDirection","currentRenderPosition","currentRenderType","setCurrentRenderPosition","setCurrentRender","SurvivalObjects","listOfObjectsTypes","length","Items","geometry","Plane","material","Grass","grass","foliage","scale","GrassLarge","grassLarge","Model","Mesh_bedroll","Mesh_bedroll_1","rock","Hoe","Mesh_toolHoe","wood","Mesh_toolHoe_1","metal","Pickaxe","Mesh_toolPickaxe","Mesh_toolPickaxe_1","Axe","Mesh_toolAxe","Mesh_toolAxe_1","Mesh_toolAxe_2","campfire","Mesh_bucket","Mesh_bucket_1","_defaultMat","rocks","Tent","Mesh_tentClosed","Mesh_tentClosed_1","cloth","Structure","Mesh_structureRoof","Mesh_structureRoof_1","woodDark","preload","CreateItemDescription","textToDisplay","outlineColor","textAlign","maxWidth","lineHeight","letterSpacing","Item","ItemToRender","map","items","name","ObjectType","description","Scene","useState","setCurrentRenderType","style","background","OrbitControls","Stars","intensity","angle","fallback","extend","Text","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0971472f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Suspense, useRef, useState } from \"react\";\r\n\r\nexport default function Floor() {\r\n    return (\r\n        <mesh position={[0, -2.5, 0]} rotation={[-Math.PI/2, 0, 0]}>\r\n            <planeBufferGeometry attach=\"geometry\" args={[100, 100]}/>\r\n            <meshLambertMaterial attach=\"material\" color='rgb(61, 102, 42)' />\r\n        </mesh>\r\n    );\r\n}","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport SurvivalObjects from './items/SurvivalObjects.json'\n\nexport default function Arrow(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Models/Arrow.glb')\n  return (\n    <group ref={group} dispose={null}>\n      <mesh {...props} onClick={(e) => {\n        console.log(props.arrowDirection)\n        console.log(props.currentRenderPosition)\n        console.log(props.currentRenderType)\n        if(props.arrowDirection === \"negative-type\" && props.currentRenderType > 0) {\n          props.setCurrentRenderPosition(0)\n          props.setCurrentRender(props.currentRenderType - 1)\n        }\n        else if(props.arrowDirection === \"positive-type\" && props.currentRenderType < (SurvivalObjects.listOfObjectsTypes.length - 1)) {\n          props.setCurrentRenderPosition(0)\n          props.setCurrentRender(props.currentRenderType + 1)\n        }\n        else if(props.arrowDirection === \"negative-item\" && props.currentRenderPosition > 0) {\n          props.setCurrentRenderPosition(props.currentRenderPosition - 1)\n        }\n        else if(props.arrowDirection === \"positive-item\" && props.currentRenderPosition < (SurvivalObjects.listOfObjectsTypes[props.currentRenderType].Items.length - 1)) {\n          props.setCurrentRenderPosition(props.currentRenderPosition + 1)\n        }\n        else {\n          console.log(\"Invalid Input, no more items in that direction.\")\n        }\n        }}geometry={nodes.Plane.geometry} material={nodes.Plane.material} />\n    </group>\n  )\n}\n\n","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Grass({ ...props }) {\n    const group = useRef()\n    const { nodes, materials } = useGLTF('/Models/grass.glb')\n    return (\n      <group position={[0,-2.5,0]} ref={group} {...props} dispose={null}>\n        <mesh geometry={nodes.grass.geometry} material={materials.foliage} scale={0.75} />\n      </group>\n    )\n}","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function GrassLarge({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Models/grassLarge.glb')\n  return (\n    <group position={[0,-2.5,0]} ref={group} {...props} dispose={null}>\n      <mesh geometry={nodes.grassLarge.geometry} material={materials.foliage} />\n    </group>\n  )\n}\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Model({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Models/bedroll.glb')\n  return (\n    <group position={[0,-2.5,0]} ref={group} {...props} dispose={null}>\n      <mesh geometry={nodes.Mesh_bedroll.geometry} material={materials.foliage} />\n      <mesh geometry={nodes.Mesh_bedroll_1.geometry} material={materials.rock} />\n    </group>\n  )\n}","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Hoe({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Models/toolHoe.glb')\n  return (\n    <group position={[0,-2.5,0]} ref={group} {...props} dispose={null}>\n      <mesh geometry={nodes.Mesh_toolHoe.geometry} material={materials.wood} />\n      <mesh geometry={nodes.Mesh_toolHoe_1.geometry} material={materials.metal} />\n    </group>\n  )\n}\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Pickaxe({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Models/toolPickaxe.glb')\n  return (\n    <group position={[0,-2.5,0]} ref={group} {...props} dispose={null}>\n      <mesh geometry={nodes.Mesh_toolPickaxe.geometry} material={materials.wood} />\n      <mesh geometry={nodes.Mesh_toolPickaxe_1.geometry} material={materials.metal} />\n    </group>\n  )\n}\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Axe({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Models/toolAxe.glb')\n  return (\n    <group position={[0,-2.5,0]} ref={group} {...props} dispose={null}>\n      <mesh geometry={nodes.Mesh_toolAxe.geometry} material={materials.wood} />\n      <mesh geometry={nodes.Mesh_toolAxe_1.geometry} material={materials.metal} />\n      <mesh geometry={nodes.Mesh_toolAxe_2.geometry} material={materials.rock} />\n    </group>\n  )\n}\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Model({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Models/campfire.glb')\n  return (\n    <group position={[0,-2.5,0]} ref={group} {...props} dispose={null}>\n      <mesh geometry={nodes.campfire.geometry} material={nodes.campfire.material}>\n        <group position={[0, 0.49, 0.03]} scale={[0.57, 0.49, 0.57]}>\n          <mesh geometry={nodes.Mesh_bucket.geometry} material={materials.metal} />\n          <mesh geometry={nodes.Mesh_bucket_1.geometry} material={materials._defaultMat} />\n        </group>\n        <mesh geometry={nodes.rocks.geometry} material={materials.rock} scale={[0.74, 0.7, 0.74]} />\n        <mesh geometry={nodes.wood.geometry} material={nodes.wood.material} position={[-0.01, 0, -0.04]} />\n      </mesh>\n    </group>\n  )\n}\n\nuseGLTF.preload('/campfire.glb')\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Tent({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Models/tentClosed.glb')\n  return (\n    <group position={[0,-2.5,0]} ref={group} {...props} dispose={null}>\n      <mesh geometry={nodes.Mesh_tentClosed.geometry} material={materials.wood} />\n      <mesh geometry={nodes.Mesh_tentClosed_1.geometry} material={materials.cloth} />\n    </group>\n  )\n}\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Structure({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Models/structureRoof.glb')\n  return (\n    <group position={[0,-2.5,0]} ref={group} {...props} dispose={null}>\n      <mesh geometry={nodes.Mesh_structureRoof.geometry} material={materials.wood} />\n      <mesh geometry={nodes.Mesh_structureRoof_1.geometry} material={materials.woodDark} />\n    </group>\n  )\n}\n","import React from \"react\";\r\nimport SurvivalObjects from './items/SurvivalObjects.json'\r\nimport Grass from './Grass.js'\r\nimport GrassLarge from \"./GrassLarge\";\r\nimport Bedroll from './Bedroll'\r\nimport Hoe from './ToolHoe'\r\nimport Pickaxe from './ToolPickaxe'\r\nimport Axe from './ToolAxe'\r\nimport Campfire from './Campfire'\r\nimport Tent from './TentClosed'\r\nimport Structure from './StructureRoof'\r\nimport { Text } from 'troika-three-text'\r\nimport { extend } from \"react-three-fiber\";\r\n\r\nextend({ Text });\r\n\r\nfunction CreateItemDescription(textToDisplay) {\r\n    return (    \r\n        <text position = {[0, 3, 0]} outlineColor=\"green\" textAlign = \"justify\" maxWidth = {300} lineHeight = {1} letterSpacing = {0} letterSpacing = {0} anchorX=\"center\" anchorY=\"top\" text = {textToDisplay} font = \"Philosopher\" fontSize = {.7}> \r\n            <meshPhongMaterial attach=\"material\" color=\"#f70cd8\" />\r\n        </text>);\r\n}\r\n\r\nexport default function Item(props) {\r\n    const ItemToRender = SurvivalObjects.listOfObjectsTypes[props.currentRenderType].Items.map(items => {\r\n        console.log(items.name)\r\n        switch (items.name) {\r\n            case 'Grass':\r\n                return <Grass />\r\n            case 'Bedroll':\r\n                return <Bedroll />\r\n            case 'Large Grass':\r\n                return <GrassLarge />\r\n            case 'Hoe':\r\n                return <Hoe />\r\n            case 'Pickaxe':\r\n                return <Pickaxe />\r\n            case 'Axe':\r\n                return <Axe />\r\n            case 'Tent':\r\n                return <Tent />\r\n            case 'Campfire':\r\n                return <Campfire />\r\n            case 'Structure':\r\n                return <Structure />\r\n            default:\r\n                return <Grass />\r\n    }});\r\n\r\n    console.log(ItemToRender)\r\n\r\n    return (\r\n        <group>\r\n            {ItemToRender[props.currentRenderPosition]}\r\n            {CreateItemDescription(\r\n                \"Type: \" + SurvivalObjects.listOfObjectsTypes[props.currentRenderType].ObjectType + \"\\n\\n\" + \r\n                \"Name: \" + SurvivalObjects.listOfObjectsTypes[props.currentRenderType].Items[props.currentRenderPosition].name + \"\\n\" +\r\n                \"Description: \" + SurvivalObjects.listOfObjectsTypes[props.currentRenderType].Items[props.currentRenderPosition].description)}\r\n        </group>\r\n    )\r\n}","import React, { useState, Suspense } from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { OrbitControls, Stars } from \"@react-three/drei\"\r\nimport Floor from './Floor.js'\r\nimport Arrow from './Arrow.js'\r\nimport Item from './Item.js'\r\n\r\n\r\nexport default function Scene() {\r\n    const [currentRenderType, setCurrentRenderType] = useState(0);\r\n    const [currentRenderPosition, setCurrentRenderPosition] = useState(0);\r\n\r\n    return (\r\n        <Canvas style={{ background: \"#171717\" }}>\r\n            <OrbitControls />\r\n            <Stars />\r\n            <ambientLight intensity={0.5} />\r\n            <spotLight position={10,15,10} angle={0.3} />\r\n            <Suspense fallback={null}>\r\n                <Arrow arrowDirection=\"negative-type\" setCurrentRenderPosition={setCurrentRenderPosition} currentRenderPosition={currentRenderPosition} setCurrentRender={setCurrentRenderType} currentRenderType={currentRenderType} scale={0.5} position={[-7, -1.5, 0]} rotation={[-Math.PI/2, -Math.PI, 0]} />\r\n                <Arrow arrowDirection=\"negative-item\" setCurrentRenderPosition={setCurrentRenderPosition} currentRenderPosition={currentRenderPosition} setCurrentRender={setCurrentRenderType} currentRenderType={currentRenderType} scale={0.3} position={[-4.5, -1.5, 0]} rotation={[Math.PI/2, -Math.PI/2, 0]} />\r\n                <Item currentRenderType={currentRenderType} currentRenderPosition={currentRenderPosition}/>\r\n                <Arrow arrowDirection=\"positive-item\" setCurrentRenderPosition={setCurrentRenderPosition} currentRenderPosition={currentRenderPosition} setCurrentRender={setCurrentRenderType} currentRenderType={currentRenderType} scale={0.3} position={[4.5, -1.5, 0]} rotation={[Math.PI/2, Math.PI/2, 0]} />\r\n                <Arrow arrowDirection=\"positive-type\" setCurrentRenderPosition={setCurrentRenderPosition} currentRenderPosition={currentRenderPosition} setCurrentRender={setCurrentRenderType} currentRenderType={currentRenderType} scale={0.5} position={[7, -1.5, 0]} rotation={[-Math.PI/2, 0, 0]} />\r\n                <Floor />\r\n            </Suspense>\r\n        </Canvas>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Scene from './Scene';\r\n\r\nReactDOM.render(\r\n    <Scene />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}